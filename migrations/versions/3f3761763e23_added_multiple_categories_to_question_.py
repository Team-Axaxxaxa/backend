"""Added multiple categories to question support

Revision ID: 3f3761763e23
Revises: e240b45370b5
Create Date: 2025-07-08 11:57:21.887134

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3f3761763e23'
down_revision: Union[str, Sequence[str], None] = 'e240b45370b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'admin', ['id'])
    op.create_unique_constraint(None, 'affiliate_link', ['id'])
    op.create_unique_constraint(None, 'answer', ['id'])
    op.create_unique_constraint(None, 'category', ['id'])
    op.create_unique_constraint(None, 'category_result', ['id'])
    op.create_unique_constraint(None, 'employment_analysis', ['id'])
    op.create_unique_constraint(None, 'question', ['id'])
    op.drop_constraint(op.f('question_category_fkey'), 'question', type_='foreignkey')
    op.drop_column('question', 'category')
    op.drop_column('question', 'increase_option')
    op.create_unique_constraint(None, 'result', ['id'])
    op.create_unique_constraint(None, 'short_analysis', ['id'])
    op.create_unique_constraint(None, 'test_taker', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'test_taker', type_='unique')
    op.drop_constraint(None, 'short_analysis', type_='unique')
    op.drop_constraint(None, 'result', type_='unique')
    op.add_column('question', sa.Column('increase_option', postgresql.ENUM('YES_INCREASE', 'NO_INCREASE', name='increaseoptionenum'), autoincrement=False, nullable=False))
    op.add_column('question', sa.Column('category', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('question_category_fkey'), 'question', 'category', ['category'], ['id'])
    op.drop_constraint(None, 'question', type_='unique')
    op.drop_constraint(None, 'employment_analysis', type_='unique')
    op.drop_constraint(None, 'category_result', type_='unique')
    op.drop_constraint(None, 'category', type_='unique')
    op.drop_constraint(None, 'answer', type_='unique')
    op.drop_constraint(None, 'affiliate_link', type_='unique')
    op.drop_constraint(None, 'admin', type_='unique')
    # ### end Alembic commands ###

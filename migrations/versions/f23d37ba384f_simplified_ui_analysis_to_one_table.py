"""Simplified ui analysis to one table

Revision ID: f23d37ba384f
Revises: 3cb60e85a171
Create Date: 2025-07-11 19:01:45.073418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f23d37ba384f'
down_revision: Union[str, Sequence[str], None] = '3cb60e85a171'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ui_analysis',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('result', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['result'], ['result.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('result')
    )
    op.drop_table('employment_analysis')
    op.drop_table('short_analysis')
    op.create_unique_constraint(None, 'question_in_category', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'question_in_category', type_='unique')
    op.create_table('short_analysis',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('result', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['result'], ['result.id'], name=op.f('short_analysis_result_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('short_analysis_pkey')),
    sa.UniqueConstraint('id', name=op.f('short_analysis_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('result', name=op.f('short_analysis_result_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('employment_analysis',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('result', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['result'], ['result.id'], name=op.f('employment_analysis_result_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('employment_analysis_pkey')),
    sa.UniqueConstraint('id', name=op.f('employment_analysis_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('result', name=op.f('employment_analysis_result_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('ui_analysis')
    # ### end Alembic commands ###
